// <auto-generated />
using System;
using ApiLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiLibrary.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230627043114_Security")]
    partial class Security
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiLibrary.Models.Autores", b =>
                {
                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<string>("AutorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAutor");

                    b.ToTable("autores");

                    b.HasData(
                        new
                        {
                            IdAutor = 1,
                            AutorName = "Ruben Darío",
                            FechaNacimiento = new DateTime(1980, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdAutor = 2,
                            AutorName = "Alvaro cochon",
                            FechaNacimiento = new DateTime(2016, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApiLibrary.Models.Libros", b =>
                {
                    b.Property<string>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AutoresId")
                        .HasColumnType("int");

                    b.Property<string>("LibName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numPaginas")
                        .HasColumnType("int");

                    b.HasKey("ISBN");

                    b.HasIndex("AutoresId");

                    b.ToTable("libros");

                    b.HasData(
                        new
                        {
                            ISBN = "001-1023M",
                            AutoresId = 2,
                            LibName = "La joyita",
                            numPaginas = 342
                        },
                        new
                        {
                            ISBN = "453-2398N",
                            AutoresId = 1,
                            LibName = "180 dias",
                            numPaginas = 500
                        });
                });

            modelBuilder.Entity("ApiLibrary.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "administrator",
                            Password = "123",
                            Role = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Teacher",
                            Password = "hola",
                            Role = "Docente"
                        });
                });

            modelBuilder.Entity("ApiLibrary.Models.Libros", b =>
                {
                    b.HasOne("ApiLibrary.Models.Autores", "Autores")
                        .WithMany()
                        .HasForeignKey("AutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autores");
                });
#pragma warning restore 612, 618
        }
    }
}
